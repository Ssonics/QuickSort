
public class PartitionQuicksort {
	public void quicksort(int a[], int p, int r)
	{
		if(p<r)
		{
			int[] q = partition(a,p,r);
			quicksort(a,p,q[0]-1);
			quicksort(a, q[1]+1, r);
		}
	}
	
	public int[] partition(int a[], int p, int r)
	{
		int x = a[r];
		int i = p-1; //p to i smaller than pivot
		int y=p; //up to y are equal to pivot
		for(int j=p; j<=(r-1); j++)
		{
			if(a[j] == x)
			{
				y=y+1;
				int temp = a[j];
				a[j]=a[y];
				a[y]=temp;
			}
			else if(a[j] < x)
			{
				i=i+1;
				int temp = a[j];
				a[j]=a[i];
				a[i]=temp;
			}
		}
		int temp = a[y+1];
		a[y+1]=a[r];
		a[r]=temp;
		int[] pivots = new int[2];
		pivots[0] = i+1;
		pivots[1]= y;
		return pivots;
	}
}
